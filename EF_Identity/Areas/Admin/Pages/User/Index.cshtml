@page "/admin/members"
@model EF_Identity.Areas.Admin.Pages.User.IndexModel
@{
	ViewData["Title"] = "Danh sach cac thanh vien";
}
<h2>@ViewData["Title"]</h2>
<p>Tong so ca thanh vien la: @Model.totalUsers</p>
<partial name="_StatusMessage" model="@Model.StatusMessage"></partial>
<table class="table">
	<tr>
		<th>Ten User</th>
		<th>Vai tro(role)</th>
		<th>Tac vu</th>
	</tr>
	@foreach(var user in Model.users)
	{
		<tr>
			<td>@user.UserName</td>
			<td>
				@if (string.IsNullOrEmpty(user.RoleNames))
				{
					<a class="text-dark" asp-page="./AddRole" asp-route-id="@user.Id">+ Them Role</a>
				}
				else
				{
					<a asp-page="./AddRole" asp-route-id="@user.Id">@user.RoleNames</a>
				}
				
			</td>
			<td>
				
				<a class="btn btn-success btn-sm" asp-page="./SetPassword" asp-route-id="@user.Id">Dat mat khau</a>
			</td>
		</tr>


	}
</table>

@{
	var pagingModel = new EF_Identity.Helper.PagingModel()
			{
				currentPage = Model.currentPage,
				countPages = Model.countPages,
				generateUrl = (int? p) => Url.Page("./Index", new { p = p })
			};
}

<partial name="_Paging" model="@pagingModel" />
